// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { BrowserTtlOptionsResponse, GetCacheSettingsData, GetCacheSettingsResponse, GetZonesResponse, ToggleAlwaysOnlineData, ToggleAlwaysOnlineResponse, ToggleBrowserCacheTtlData, ToggleBrowserCacheTtlResponse, ToggleCachingLevelData, ToggleCachingLevelResponse, ToggleDevelopmentModeData, ToggleDevelopmentModeResponse, AllResponse, CustomData, CustomResponse, MediaFolderData, MediaFolderResponse, NodeData, NodeResponse } from './types.gen';

export class V1Resource {
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static browserTtlOptions(): CancelablePromise<BrowserTtlOptionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/browserttloptions',
            errors: {
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.zoneId
     * @returns unknown OK
     * @throws ApiError
     */
    public static getCacheSettings(data: GetCacheSettingsData = {}): CancelablePromise<GetCacheSettingsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/getcachesettings',
            query: {
                zoneId: data.zoneId
            },
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getZones(): CancelablePromise<GetZonesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/getzones',
            errors: {
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.zoneId
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static toggleAlwaysOnline(data: ToggleAlwaysOnlineData = {}): CancelablePromise<ToggleAlwaysOnlineResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/togglealwaysonline',
            query: {
                zoneId: data.zoneId
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.zoneId
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static toggleBrowserCacheTtl(data: ToggleBrowserCacheTtlData = {}): CancelablePromise<ToggleBrowserCacheTtlResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/togglebrowsercachettl',
            query: {
                zoneId: data.zoneId
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.zoneId
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static toggleCachingLevel(data: ToggleCachingLevelData = {}): CancelablePromise<ToggleCachingLevelResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/togglecachinglevel',
            query: {
                zoneId: data.zoneId
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.zoneId
     * @param data.requestBody
     * @returns unknown OK
     * @throws ApiError
     */
    public static toggleDevelopmentMode(data: ToggleDevelopmentModeData = {}): CancelablePromise<ToggleDevelopmentModeResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/toggledevelopmentmode',
            query: {
                zoneId: data.zoneId
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @returns string Accepted
     * @throws ApiError
     */
    public static all(): CancelablePromise<AllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/umbhostcloudflarepurge/v1.0/purge/all',
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string Accepted
     * @throws ApiError
     */
    public static custom(data: CustomData = {}): CancelablePromise<CustomResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/umbhostcloudflarepurge/v1.0/purge/custom',
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string Accepted
     * @throws ApiError
     */
    public static mediaFolder(data: MediaFolderData = {}): CancelablePromise<MediaFolderResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/umbhostcloudflarepurge/v1.0/purge/mediafolder',
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string Accepted
     * @throws ApiError
     */
    public static node(data: NodeData = {}): CancelablePromise<NodeResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/umbhostcloudflarepurge/v1.0/purge/node',
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
}
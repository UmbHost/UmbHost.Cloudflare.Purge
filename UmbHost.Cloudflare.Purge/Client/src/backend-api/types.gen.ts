// This file is auto-generated by @hey-api/openapi-ts

export type AllSettings = {
    alwaysOnline?: AlwaysOnline | null;
    browserCacheTtl?: BrowserCacheTtl | null;
    cacheLevel?: CacheLevel | null;
    developmentMode?: DevelopmentMode | null;
};

export type AlwaysOnline = {
    id: string;
    value: SettingsValueEnum;
    modified_on?: string | null;
    editable: boolean;
};

export type BrowserCacheTtl = {
    id: string;
    value: BrowserCacheTtlEnum;
    modified_on?: string | null;
    editable: boolean;
};

export type BrowserCacheTtlEnum = 'RespectExistingHeaders' | 'ThirtyMinutes' | 'OneHour' | 'TwoHours' | 'ThreeHours' | 'FourHours' | 'FiveHours' | 'EightHours' | 'TwelveHours' | 'SixteenHours' | 'TwentyHours' | 'OneDay' | 'TwoDays' | 'ThreeDays' | 'FourDays' | 'FiveDays' | 'EightDays' | 'SixteenDays' | 'TwentyFourDays' | 'OneMonth' | 'TwoMonths' | 'SixMonths' | 'OneYear';

export type CacheLevel = {
    id: string;
    value: CacheLevelEnum;
    modified_on?: string | null;
    editable: boolean;
};

export type CacheLevelEnum = 'aggressive' | 'basic' | 'simplified';

export type DevelopmentMode = {
    id: string;
    value: SettingsValueEnum;
    modified_on: string;
    time_remaining: number;
    editable: boolean;
};

export type EnumDescription = {
    value: number;
    name: string;
};

export type EventMessageTypeModel = 'Default' | 'Info' | 'Error' | 'Success' | 'Warning';

export type NewAlwaysOnline = {
    value: string;
};

export type NewBrowserCacheTtl = {
    value: number;
};

export type NewCacheLevel = {
    value: string;
};

export type NewDevelopmentMode = {
    value: string;
};

export type NotificationHeaderModel = {
    message: string;
    category: string;
    type: EventMessageTypeModel;
};

export type SettingsValueEnum = 'on' | 'off' | 'lossless' | 'lossy';

export type TreePurge = {
    unique: string;
    culture?: string | null;
};

export type BrowserTtlOptionsResponse = Array<(EnumDescription)>;

export type GetCacheSettingsResponse = AllSettings;

export type ToggleAlwaysOnlineData = {
    requestBody?: NewAlwaysOnline;
};

export type ToggleAlwaysOnlineResponse = AlwaysOnline;

export type ToggleBrowserCacheTtlData = {
    requestBody?: NewBrowserCacheTtl;
};

export type ToggleBrowserCacheTtlResponse = BrowserCacheTtl;

export type ToggleCachingLevelData = {
    requestBody?: NewCacheLevel;
};

export type ToggleCachingLevelResponse = CacheLevel;

export type ToggleDevelopmentModeData = {
    requestBody?: NewDevelopmentMode;
};

export type ToggleDevelopmentModeResponse = DevelopmentMode;

export type AllResponse = string;

export type CustomData = {
    requestBody?: Array<(string)>;
};

export type CustomResponse = string;

export type MediaFolderData = {
    requestBody?: number;
};

export type MediaFolderResponse = string;

export type NodeData = {
    requestBody?: TreePurge;
};

export type NodeResponse = string;

export type $OpenApiTs = {
    '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/browserttloptions': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<(EnumDescription)>;
                /**
                 * The resource is protected and requires an authentication token
                 */
                401: unknown;
            };
        };
    };
    '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/getcachesettings': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: AllSettings;
                /**
                 * Bad Request
                 */
                400: string;
                /**
                 * The resource is protected and requires an authentication token
                 */
                401: unknown;
            };
        };
    };
    '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/togglealwaysonline': {
        patch: {
            req: ToggleAlwaysOnlineData;
            res: {
                /**
                 * OK
                 */
                200: AlwaysOnline;
                /**
                 * Bad Request
                 */
                400: string;
                /**
                 * The resource is protected and requires an authentication token
                 */
                401: unknown;
            };
        };
    };
    '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/togglebrowsercachettl': {
        patch: {
            req: ToggleBrowserCacheTtlData;
            res: {
                /**
                 * OK
                 */
                200: BrowserCacheTtl;
                /**
                 * Bad Request
                 */
                400: string;
                /**
                 * The resource is protected and requires an authentication token
                 */
                401: unknown;
            };
        };
    };
    '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/togglecachinglevel': {
        patch: {
            req: ToggleCachingLevelData;
            res: {
                /**
                 * OK
                 */
                200: CacheLevel;
                /**
                 * Bad Request
                 */
                400: string;
                /**
                 * The resource is protected and requires an authentication token
                 */
                401: unknown;
            };
        };
    };
    '/umbraco/umbhostcloudflarepurge/v1.0/cache-settings/toggledevelopmentmode': {
        patch: {
            req: ToggleDevelopmentModeData;
            res: {
                /**
                 * OK
                 */
                200: DevelopmentMode;
                /**
                 * Bad Request
                 */
                400: string;
                /**
                 * The resource is protected and requires an authentication token
                 */
                401: unknown;
            };
        };
    };
    '/umbraco/umbhostcloudflarepurge/v1.0/purge/all': {
        post: {
            res: {
                /**
                 * Accepted
                 */
                202: string;
                /**
                 * Bad Request
                 */
                400: string;
                /**
                 * The resource is protected and requires an authentication token
                 */
                401: unknown;
            };
        };
    };
    '/umbraco/umbhostcloudflarepurge/v1.0/purge/custom': {
        post: {
            req: CustomData;
            res: {
                /**
                 * Accepted
                 */
                202: string;
                /**
                 * Bad Request
                 */
                400: string;
                /**
                 * The resource is protected and requires an authentication token
                 */
                401: unknown;
            };
        };
    };
    '/umbraco/umbhostcloudflarepurge/v1.0/purge/mediafolder': {
        post: {
            req: MediaFolderData;
            res: {
                /**
                 * Accepted
                 */
                202: string;
                /**
                 * Bad Request
                 */
                400: string;
                /**
                 * The resource is protected and requires an authentication token
                 */
                401: unknown;
            };
        };
    };
    '/umbraco/umbhostcloudflarepurge/v1.0/purge/node': {
        post: {
            req: NodeData;
            res: {
                /**
                 * Accepted
                 */
                202: string;
                /**
                 * Bad Request
                 */
                400: string;
                /**
                 * The resource is protected and requires an authentication token
                 */
                401: unknown;
            };
        };
    };
};
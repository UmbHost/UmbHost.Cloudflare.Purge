{"version":3,"file":"entry-u0wCh85E.js","sources":["../../../Client/src/trees/manifest.ts","../../../Client/src/dashboards/manifest.ts","../../../Client/src/workspaces/manifest.ts","../../../Client/src/menus/manifest.ts","../../../Client/src/localization/manifest.ts","../../../Client/src/userpermissions/manifest.ts","../../../Client/src/bundle.manifests.ts","../../../Client/src/backend-api/core/OpenAPI.ts","../../../Client/src/entry.ts"],"sourcesContent":["import { UMB_DOCUMENT_ENTITY_TYPE } from \"@umbraco-cms/backoffice/document\";\r\nimport { UMB_MEDIA_ENTITY_TYPE } from \"@umbraco-cms/backoffice/media\";\r\n\r\nconst purgeCdnContentEntityActionManifest = {\r\n    type: 'entityAction',\r\n    alias: 'umbhost-cloudflare-purge-cdn-entity-action-content',\r\n    name: 'Cloudflare CDN Purge Entity Action',\r\n    kind: 'default',\r\n    weight: 50,\r\n    api: () => import(\"./purge-content-tree-entity.action\"),\r\n    forEntityTypes: [UMB_DOCUMENT_ENTITY_TYPE] as string[],\r\n    meta: {\r\n        icon: 'icon-cloud',\r\n        label: '#umbhostCloudflarePurge_entityactionlabel'\r\n    },\r\n    conditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.UserPermission.Document',\r\n\t\t\t\tallOf: ['UmbHostCloudflarePurgeContent']\r\n\t\t\t}\r\n\t\t]\r\n};\r\n\r\nconst purgeCdnMediaEntityActionManifest = {\r\n    type: 'entityAction',\r\n    alias: 'umbhost-cloudflare-purge-cdn-entity-action-media',\r\n    name: 'Cloudflare CDN Purge Entity Action',\r\n    kind: 'default',\r\n    weight: 50,\r\n    api: () => import(\"./purge-media-tree-entity.action\"),\r\n    forEntityTypes: [UMB_MEDIA_ENTITY_TYPE] as string[],\r\n    meta: {\r\n        icon: 'icon-cloud',\r\n        label: '#umbhostCloudflarePurge_entityactionlabel'\r\n    },\r\n    conditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.UserPermission.Document',\r\n\t\t\t\tallOf: ['UmbHostCloudflarePurgeMedia']\r\n\t\t\t}\r\n\t\t]\r\n};\r\n\r\nexport const manifests = [\r\n    purgeCdnContentEntityActionManifest,\r\n    purgeCdnMediaEntityActionManifest\r\n];","import { UMB_DOCUMENT_ENTITY_TYPE } from '@umbraco-cms/backoffice/document';\r\n\r\nconst dashboardManifest = {\r\n    type: 'dashboard',\r\n    alias: 'umbhost-cloudflare-purge-dashboard',\r\n    name: 'Cloudflare CDN Purge Dashboard',\r\n    element: () => import('./purge-dashboard'),\r\n    elementName: \"umbhost-cloudflare-purge-dashboard\",\r\n    forEntityTypes: [UMB_DOCUMENT_ENTITY_TYPE],\r\n    weight: 15,\r\n    meta: {\r\n        label: \"Cloudflare CDN Purge Dashboard\",\r\n        pathname: \"umbhost-cloudflare-purge-dashboard\"\r\n    },\r\n    conditions: [\r\n        {\r\n            alias: \"Umb.Condition.SectionAlias\",\r\n            match: \"Umb.Section.Content\"\r\n        },\r\n        {\r\n            alias: \"Umb.Condition.CurrentUser.GroupId\",\r\n            oneOf: [\"74faa29d-d43d-44bf-b3df-e02e8b38e08f\"]\r\n        }\r\n    ]\r\n};\r\n\r\nexport const manifests = [\r\n    dashboardManifest\r\n];","const settingsWorkspace = {\r\n    type: 'workspace',\r\n    kind: 'default',\r\n    alias: \"umbhost-cloudflare-purge-workspace\",\r\n    name: 'Cloudflare CDN Purge Settings Workspace',\r\n    meta: {\r\n        entityType: \"umbhost-cloudflare-purge\",\r\n        headline: '#umbhostCloudflarePurge_workspacetitle',\r\n    },\r\n    conditions: [\r\n        {\r\n            alias: \"Umb.Condition.SectionAlias\",\r\n            match: \"Umb.Section.Settings\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst settingsOverview = {\r\n    \"type\": \"workspaceView\",\r\n    \"alias\": \"umbhost-cloudflare-purge-settings-overview\",\r\n    \"name\": \"Cloudflare CDN Purge Settings Overview\",\r\n    element: () => import('./overview'),\r\n    elementName: \"umbhost-cloudflare-purge-settings-overview\",\r\n    \"meta\": {\r\n        \"label\": \"#umbhostCloudflarePurge_settingsoverview\",\r\n        \"pathname\": \"overview\",\r\n        \"icon\": \"icon-dashboard\"\r\n    },\r\n    \"conditions\": [\r\n        {\r\n            \"alias\": \"Umb.Condition.WorkspaceAlias\",\r\n            \"match\": \"umbhost-cloudflare-purge-workspace\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst settingsCaching = {\r\n    \"type\": \"workspaceView\",\r\n    \"alias\": \"umbhost-cloudflare-purge-settings-caching\",\r\n    \"name\": \"Cloudflare CDN Purge Settings Caching\",\r\n    element: () => import('./caching'),\r\n    elementName: \"umbhost-cloudflare-purge-settings-caching\",\r\n    \"meta\": {\r\n        \"label\": \"#umbhostCloudflarePurge_settingscaching\",\r\n        \"pathname\": \"caching\",\r\n        \"icon\": \"icon-cloud\"\r\n    },\r\n    \"conditions\": [\r\n        {\r\n            \"alias\": \"Umb.Condition.WorkspaceAlias\",\r\n            \"match\": \"umbhost-cloudflare-purge-workspace\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const manifests = [\r\n    settingsWorkspace,\r\n    settingsOverview,\r\n    settingsCaching\r\n];","import { UMB_SETTINGS_SECTION_ALIAS } from \"@umbraco-cms/backoffice/settings\";\r\n\r\nconst menu = {\r\n    type: 'menu',\r\n    alias: 'umbhost-cloudflare-purge-settings-menu',\r\n    name: 'Cloudflare CDN Purge Settings Menu',\r\n}\r\n\r\nconst settingsMenu = {\r\n    type: 'sectionSidebarApp',\r\n    kind: 'menu',\r\n    alias: 'umbhost-cloudflare-purge-settings-sidebar-menu',\r\n    name: 'Cloudflare CDN Purge Settings Menu',\r\n    weight: -100,\r\n    meta: {\r\n        label: '#umbhostCloudflarePurge_cloudflare',\r\n        menu: 'umbhost-cloudflare-purge-settings-menu',\r\n    },\r\n    conditions: [\r\n        {\r\n            alias: 'Umb.Condition.SectionAlias',\r\n            match: UMB_SETTINGS_SECTION_ALIAS,\r\n        },\r\n    ],\r\n}\r\n\r\nconst overviewMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'umbhost-cloudflare-purge-settings-overview-menu-item',\r\n    name: 'Cloudflare CDN Purge Settings Overview Menu Item',\r\n    meta: {\r\n        label: '#umbhostCloudflarePurge_settingsoverview',\r\n        icon: 'icon-dashboard',\r\n        entityType: 'umbhost-cloudflare-purge/overview',\r\n        menus: ['umbhost-cloudflare-purge-settings-menu'],\r\n    },\r\n};\r\n\r\nconst cachingMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'umbhost-cloudflare-purge-settings-caching-menu-item',\r\n    name: 'Cloudflare CDN Purge Settings Caching Menu Item',\r\n    meta: {\r\n        label: '#umbhostCloudflarePurge_settingscaching',\r\n        icon: 'icon-cloud',\r\n        entityType: 'umbhost-cloudflare-purge/view/caching',\r\n        menus: ['umbhost-cloudflare-purge-settings-menu'],\r\n    },\r\n};\r\n\r\nexport const manifests = [\r\n    menu,\r\n    settingsMenu,\r\n    overviewMenuItem,\r\n    cachingMenuItem\r\n];","const localization = {\r\n    type: \"localization\",\r\n    alias: \"umbhost-cloudflare-purge-localize-en\",\r\n    name: \"Cloudflare CDN Purge Localization\",\r\n    meta: {\r\n        \"culture\": \"en\"\r\n    },\r\n    js: () => import('./en')\r\n};\r\n\r\nexport const manifests = [\r\n    localization\r\n];","import { UMB_DOCUMENT_ENTITY_TYPE } from \"@umbraco-cms/backoffice/document\";\r\n\r\nconst purgeContentTreeItems = {\r\n    type: \"entityUserPermission\",\r\n    alias: \"umbhost-cloudflare-purge-userpermissions-content\",\r\n    name: \"Purge Content Items from Cloudflare CDN\",\r\n    forEntityTypes: [UMB_DOCUMENT_ENTITY_TYPE],\r\n    meta: {\r\n      verbs: [\"UmbHostCloudflarePurgeContent\"],\r\n      label: \"#umbhostCloudflarePurge_usercontentpermissionslabel\",\r\n      description: \"#umbhostCloudflarePurge_usercontentpermissionsdescription\",\r\n      group: \"UmbHost Cloudflare Purge\",\r\n    },\r\n  }\r\n\r\nconst purgeMediaTreeItems = {\r\n    type: \"entityUserPermission\",\r\n    alias: \"umbhost-cloudflare-purge-userpermissions-media\",\r\n    name: \"Purge Media Items from Cloudflare CDN\",\r\n    forEntityTypes: [UMB_DOCUMENT_ENTITY_TYPE],\r\n    meta: {\r\n      verbs: [\"UmbHostCloudflarePurgeMedia\"],\r\n      label: \"#umbhostCloudflarePurge_usermediapermissionslabel\",\r\n      description: \"#umbhostCloudflarePurge_usermediapermissionsdescription\",\r\n      group: \"UmbHost Cloudflare Purge\",\r\n    },\r\n  }\r\n\r\nexport const manifests = [\r\n    purgeContentTreeItems,\r\n    purgeMediaTreeItems\r\n];","import { manifests as trees } from \"./trees/manifest\";\r\nimport { manifests as dashboards } from \"./dashboards/manifest\";\r\nimport { manifests as workspaces} from \"./workspaces/manifest\";\r\nimport { manifests as menus } from \"./menus/manifest\";\r\nimport { manifests as localizations } from \"./localization/manifest\";\r\nimport { manifests as userpermissions } from \"./userpermissions/manifest\";\r\nimport { UmbBackofficeExtensionRegistry } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nexport async function registerManifest(registry : UmbBackofficeExtensionRegistry) {\r\n    registry.registerMany([\r\n  ...dashboards,\r\n  ...localizations,\r\n  ...trees,\r\n  ...menus,\r\n  ...workspaces,\r\n  ...userpermissions\r\n  ]);\r\n}","import type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Headers = Record<string, string>;\ntype Middleware<T> = (value: T) => T | Promise<T>;\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport class Interceptors<T> {\n  _fns: Middleware<T>[];\n\n  constructor() {\n    this._fns = [];\n  }\n\n  eject(fn: Middleware<T>) {\n    const index = this._fns.indexOf(fn);\n    if (index !== -1) {\n      this._fns = [...this._fns.slice(0, index), ...this._fns.slice(index + 1)];\n    }\n  }\n\n  use(fn: Middleware<T>) {\n    this._fns = [...this._fns, fn];\n  }\n}\n\nexport type OpenAPIConfig = {\n\tBASE: string;\n\tCREDENTIALS: 'include' | 'omit' | 'same-origin';\n\tENCODE_PATH?: ((path: string) => string) | undefined;\n\tHEADERS?: Headers | Resolver<Headers> | undefined;\n\tPASSWORD?: string | Resolver<string> | undefined;\n\tTOKEN?: string | Resolver<string> | undefined;\n\tUSERNAME?: string | Resolver<string> | undefined;\n\tVERSION: string;\n\tWITH_CREDENTIALS: boolean;\n\tinterceptors: {\n\t\trequest: Interceptors<RequestInit>;\n\t\tresponse: Interceptors<Response>;\n\t};\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n\tBASE: '',\n\tCREDENTIALS: 'include',\n\tENCODE_PATH: undefined,\n\tHEADERS: undefined,\n\tPASSWORD: undefined,\n\tTOKEN: undefined,\n\tUSERNAME: undefined,\n\tVERSION: '1.0',\n\tWITH_CREDENTIALS: false,\n\tinterceptors: {\n\t\trequest: new Interceptors(),\n\t\tresponse: new Interceptors(),\n\t},\n};","import type { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\nimport { registerManifest } from './bundle.manifests.js';\r\nimport { OpenAPI } from './backend-api/index.js';\r\n\r\nexport const onInit: UmbEntryPointOnInit = (host, extensionRegistry) => {\r\n\r\n  host.consumeContext(UMB_AUTH_CONTEXT,(auth)=> {\r\n\r\n      const config = auth.getOpenApiConfiguration();\r\n\r\n      OpenAPI.BASE = config.base;\r\n      OpenAPI.WITH_CREDENTIALS = config.withCredentials;\r\n      OpenAPI.CREDENTIALS = config.credentials;\r\n      OpenAPI.TOKEN = config.token;\r\n\r\n  });\r\n\r\n  registerManifest(extensionRegistry);\r\n\r\n};"],"names":["purgeCdnContentEntityActionManifest","UMB_DOCUMENT_ENTITY_TYPE","purgeCdnMediaEntityActionManifest","UMB_MEDIA_ENTITY_TYPE","manifests","dashboardManifest","settingsWorkspace","settingsOverview","settingsCaching","menu","settingsMenu","UMB_SETTINGS_SECTION_ALIAS","overviewMenuItem","cachingMenuItem","localization","purgeContentTreeItems","purgeMediaTreeItems","registerManifest","registry","dashboards","localizations","trees","menus","workspaces","userpermissions","Interceptors","fn","index","OpenAPI","onInit","host","extensionRegistry","UMB_AUTH_CONTEXT","auth","config"],"mappings":"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"}
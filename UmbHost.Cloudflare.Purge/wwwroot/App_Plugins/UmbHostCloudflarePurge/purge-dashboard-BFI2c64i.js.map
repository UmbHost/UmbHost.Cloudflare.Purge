{"version":3,"file":"purge-dashboard-BFI2c64i.js","sources":["../../../Client/src/dashboards/purge-dashboard.ts"],"sourcesContent":["import { css, html, customElement, ifDefined, state, property } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbNotificationContext, UmbNotificationDefaultData, UMB_NOTIFICATION_CONTEXT, } from '@umbraco-cms/backoffice/notification';\r\nimport { UmbModalManagerContext, UMB_CONFIRM_MODAL, UMB_MODAL_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/modal'\r\nimport { CustomData, V1Resource } from '../backend-api';\r\n\r\n@customElement('umbhost-cloudflare-purge-dashboard')\r\nexport class UmbHostCloudflarePurgeDashboardElement extends UmbLitElement {\r\n\r\n  private _notificationContext?: UmbNotificationContext;\r\n  #modalContext?: UmbModalManagerContext;\r\n\r\n  @state()\r\n  private purgeEverythingButtonState?: UUIButtonState;\r\n\r\n  @state()\r\n  private customPurgeButtonState?: UUIButtonState;\r\n \r\n  private get purgeUrls(): string[] {\r\n  return this.purgeUrlsInput\r\n    .split(/\\r\\n|\\r|\\n/)\r\n    .map(line => line.trim())\r\n    .filter(line => line.length > 0);\r\n  }\r\n\r\n  @property({ type: String }) \r\n  private purgeUrlsInput: string = '';\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.consumeContext(UMB_NOTIFICATION_CONTEXT, (notificationContext) => {\r\n      this._notificationContext = notificationContext;\r\n    });\r\n\r\n    this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (_instance) => {\r\n      this.#modalContext = _instance;\r\n    });\r\n  }\r\n\r\n  async #handlePurgeEverything() {\r\n    this.purgeEverythingButtonState = 'waiting';\r\n\r\n    const modalHandler = this.#modalContext?.open(this, UMB_CONFIRM_MODAL, {\r\n      data: {\r\n        headline: this.localize.term(\"umbhostCloudflarePurge_confirmpurgeeverythingtitle\"),\r\n        content: this.localize.term(\"umbhostCloudflarePurge_confirmpurgeeverythingcontent\"),\r\n        color: 'danger',\r\n        confirmLabel: this.localize.term(\"umbhostCloudflarePurge_confirmpurgeeverythingconfirm\"),\r\n      }\r\n    });\r\n    await modalHandler?.onSubmit().then(() => {\r\n      const data: UmbNotificationDefaultData = { headline: this.localize.term(\"umbhostCloudflarePurge_purgesuccesstitle\"), message: this.localize.term(\"umbhostCloudflarePurge_purgesuccesscontent\") };\r\n      this._notificationContext?.peek('positive', { data });\r\n\r\n      V1Resource.all().then(() => {\r\n        this.purgeEverythingButtonState = 'success';\r\n      return;\r\n      }).catch(() => {\r\n        this.purgeEverythingButtonState = 'failed';\r\n      return;\r\n      });\r\n    }).catch(() => {\r\n      this.purgeEverythingButtonState = undefined;\r\n    });\r\n  }\r\n\r\n  async #handleCustomPurge() {\r\n    this.customPurgeButtonState = 'waiting';\r\n\r\n    const modalHandler = this.#modalContext?.open(this, UMB_CONFIRM_MODAL, {\r\n      data: {\r\n        headline: this.localize.term(\"umbhostCloudflarePurge_confirmcustompurgetitle\"),\r\n        content: this.localize.term(\"umbhostCloudflarePurge_confirmcustompurgecontent\"),\r\n        color: 'danger',\r\n        confirmLabel: this.localize.term(\"umbhostCloudflarePurge_confirmcustompurgeconfirm\"),\r\n      }\r\n    });\r\n    await modalHandler?.onSubmit().then(() => {\r\n      const data: UmbNotificationDefaultData = { headline: this.localize.term(\"umbhostCloudflarePurge_purgesuccesstitle\"), message: this.localize.term(\"umbhostCloudflarePurge_purgesuccesscontent\") };\r\n      this._notificationContext?.peek('positive', { data });\r\n      var customPurge : CustomData = {\r\n        requestBody: this.purgeUrls\r\n      }\r\n\r\n      V1Resource.custom(customPurge).then(() => {\r\n        this.purgeEverythingButtonState = 'success';\r\n      return;\r\n      }).catch(() => {\r\n        this.purgeEverythingButtonState = 'failed';\r\n      return;\r\n      });\r\n      this.customPurgeButtonState = 'success';\r\n      return;\r\n    })\r\n      .catch(() => {\r\n        this.customPurgeButtonState = undefined;\r\n      });\r\n  }\r\n\r\n  private handleTextareaInput(e: Event) {\r\n  const target = e.target as HTMLTextAreaElement;\r\n  this.purgeUrlsInput = target.value;\r\n  }\r\n\r\n  override render() {\r\n    return html`\r\n        <umb-workspace-editor>\r\n          <div slot=\"actions\">\r\n            <uui-button\r\n            pristine=\"\"\r\n            label=${this.localize.term(\"umbhostCloudflarePurge_purgeeverything\")}\r\n            @click=\"${() => this.#handlePurgeEverything()}\"\r\n            state=${ifDefined(this.purgeEverythingButtonState)}\r\n            look=\"secondary\"\r\n            color=\"positive\"\r\n            ></uui-button>\r\n            <uui-button\r\n            pristine=\"\"\r\n            label=${this.localize.term(\"umbhostCloudflarePurge_custompurge\")}\r\n            @click=\"${() => this.#handleCustomPurge()}\"\r\n            state=${ifDefined(this.customPurgeButtonState)}\r\n            look=\"primary\"\r\n            color=\"positive\"\r\n            ></uui-button>\r\n          </div>\r\n          <div id=\"main\">\r\n            <uui-box headline=${this.localize.term(\"umbhostCloudflarePurge_headline\")}>\r\n                <umb-localize key=\"umbhostCloudflarePurge_introduction\">Welcome</umb-localize>\r\n                <uui-label for=\"purgeUrls\" required=\"\">\r\n                  <umb-localize key=\"umbhostCloudflarePurge_urls\"></umb-localize></uui-label>\r\n                <uui-textarea id=\"purgeUrls\" rows=\"10\" required=\"\" .value=${this.purgeUrlsInput} @input=${this.handleTextareaInput}></uui-textarea>\r\n            </uui-box>\r\n          </div>\r\n        </umb-workspace-editor>\r\n    `;\r\n  }\r\n\r\n  static override readonly styles = [\r\n    css`\r\n            #main {\r\n                display: block;\r\n                flex: 1 1 0%;\r\n                flex-direction: column;\r\n                overflow-y: auto;\r\n                padding: var(--uui-size-layout-1);\r\n            }\r\n        `,\r\n  ];\r\n}\r\n\r\nexport default UmbHostCloudflarePurgeDashboardElement;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'umbhost-cloudflare-purge-cdn-dashboard': UmbHostCloudflarePurgeDashboardElement;\r\n  }\r\n}"],"names":["_modalContext","_UmbHostCloudflarePurgeDashboardElement_instances","handlePurgeEverything_fn","handleCustomPurge_fn","UmbHostCloudflarePurgeDashboardElement","UmbLitElement","__privateAdd","UMB_NOTIFICATION_CONTEXT","notificationContext","UMB_MODAL_MANAGER_CONTEXT","_instance","__privateSet","line","e","target","html","__privateMethod","ifDefined","modalHandler","_a","__privateGet","UMB_CONFIRM_MODAL","data","V1Resource","customPurge","css","__decorateClass","state","property","customElement","UmbHostCloudflarePurgeDashboardElement$1"],"mappings":"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"}